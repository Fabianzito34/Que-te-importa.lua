if not game:IsLoaded() then 
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local SilentAimSettings = {
    Enabled = true,
    TeamCheck = false,
    VisibleCheck = false,
    TargetPart = "HumanoidRootPart",
    SilentAimMethod = "Raycast",
    HitChance = 100
}

local function getDirection(origin, position)
    return (position - origin).Unit * 1000
end

local function getMousePosition()
    return game:GetService("UserInputService"):GetMouseLocation()
end

local function WorldToScreenPosition(worldPos)
    local screenPos, onScreen = Camera:WorldToViewportPoint(worldPos)
    return Vector2.new(screenPos.X, screenPos.Y), onScreen
end

local function CalculateChance(percentage)
    local chance = math.random()
    return chance <= (percentage / 100)
end

local function getClosestPlayer()
    local closestPart = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(SilentAimSettings.TargetPart) then
            if SilentAimSettings.TeamCheck and player.Team == LocalPlayer.Team then continue end

            local part = player.Character[SilentAimSettings.TargetPart]
            local screenPos, onScreen = WorldToScreenPosition(part.Position)
            if not onScreen then continue end

            local mousePos = getMousePosition()
            local distance = (mousePos - screenPos).Magnitude

            if distance < shortestDistance then
                shortestDistance = distance
                closestPart = part
            end
        end
    end

    return closestPart
end

local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local args = {...}
    local method = getnamecallmethod()
    local self = args[1]

    if not checkcaller() and SilentAimSettings.Enabled and self == workspace and method == "Raycast" and SilentAimSettings.SilentAimMethod == "Raycast" then
        if #args >= 4 and typeof(args[2]) == "Vector3" and typeof(args[3]) == "Vector3" and typeof(args[4]) == "RaycastParams" then
            local origin = args[2]
            local targetPart = getClosestPlayer()
            if targetPart and CalculateChance(SilentAimSettings.HitChance) then
                args[3] = getDirection(origin, targetPart.Position)
                return oldNamecall(unpack(args))
            end
        end
    end

    return oldNamecall(...)
end))
