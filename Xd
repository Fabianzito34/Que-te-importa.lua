
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")


local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera


local SilentAimSettings = {
    Enabled = true,
    TargetPart = "HumanoidRootPart",
    FOVRadius = 130,
    HitChance = 100
}


local function CalculateChance(Percentage)
    local chance = math.floor(Random.new():NextNumber(0, 1) * 100)
    return chance <= Percentage
end

local function getMousePosition()
    local success, pos = pcall(function()
        return UserInputService:GetMouseLocation()
    end)
    return success and pos or Vector2.zero
end

local function getDirection(Origin, Position)
    return (Position - Origin).Unit * 1000
end

local function getPositionOnScreen(Vector)
    local success, vec3, onScreen = pcall(function()
        return Camera:WorldToScreenPoint(Vector)
    end)
    if success and vec3 then
        return Vector2.new(vec3.X, vec3.Y), onScreen
    else
        return Vector2.zero, false
    end
end

local function getClosestPlayer()
    local Closest, DistanceToMouse = nil, nil
    for _, Player in ipairs(Players:GetPlayers()) do
        if Player ~= LocalPlayer and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
            local Humanoid = Player.Character:FindFirstChild("Humanoid")
            if Humanoid and Humanoid.Health > 0 then
                local screenPos, onScreen = getPositionOnScreen(Player.Character[SilentAimSettings.TargetPart].Position)
                if onScreen then
                    local mousePos = getMousePosition()
                    local distance = (mousePos - screenPos).Magnitude
                    if distance <= (DistanceToMouse or SilentAimSettings.FOVRadius) then
                        DistanceToMouse = distance
                        Closest = Player.Character[SilentAimSettings.TargetPart]
                    end
                end
            end
        end
    end
    return Closest
end

local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local args = {...}
    local self = args[1]
    local method = getnamecallmethod()

    local ok, result = pcall(function()
        if not checkcaller() and method == "Raycast" and SilentAimSettings.Enabled and CalculateChance(SilentAimSettings.HitChance) then
            if self == workspace then
                local origin = args[2]
                local target = getClosestPlayer()
                if target then
                    args[3] = getDirection(origin, target.Position)
                    return oldNamecall(unpack(args))
                end
            end
        end
        return oldNamecall(...)
    end)

    if ok then return result end
end))

local oldIndex
oldIndex = hookmetamethod(game, "__index", newcclosure(function(self, key)
    local ok, result = pcall(function()
        if self == LocalPlayer:GetMouse() and not checkcaller() and SilentAimSettings.Enabled then
            local HitPart = getClosestPlayer()
            if HitPart then
                if key == "Target" then
                    return HitPart
                elseif key == "Hit" then
                    return HitPart.CFrame
                end
            end
        end
        return oldIndex(self, key)
    end)

    if ok then return result end
end))

LocalPlayer:GetMouse().Button1Down:Connect(function()
    if SilentAimSettings.Enabled then
        local target = getClosestPlayer()
        if target then
            print("Target a: ", target:GetFullName())
        end
    end
end)
