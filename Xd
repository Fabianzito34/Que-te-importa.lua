local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()

local Window = Rayfield:CreateWindow({
    Name = "Silent Aim - King Legacy",
    LoadingTitle = "Silent Aim Loading...",
    LoadingSubtitle = "By ChatGPT",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false,
})

local MainTab = Window:CreateTab("Main")
local SilentAimSection = MainTab:CreateSection("Silent Aim")

local SilentAim = {
    Enabled = true,
    Range = 200,
    TargetPart = "HumanoidRootPart",
    HitChance = 100,
    ConfigFolder = "SilentAim_KingLegacy"
}

local function SaveConfig()
    if not isfolder(SilentAim.ConfigFolder) then makefolder(SilentAim.ConfigFolder) end
    writefile(SilentAim.ConfigFolder .. "/config.json", HttpService:JSONEncode(SilentAim))
end

local function LoadConfig()
    if isfile(SilentAim.ConfigFolder .. "/config.json") then
        local data = readfile(SilentAim.ConfigFolder .. "/config.json")
        local loaded = HttpService:JSONDecode(data)
        for k, v in pairs(loaded) do
            SilentAim[k] = v
        end
    end
end

LoadConfig()

MainTab:CreateToggle({
    Name = "Enable Silent Aim",
    CurrentValue = SilentAim.Enabled,
    Callback = function(Value)
        SilentAim.Enabled = Value
        SaveConfig()
    end,
})

MainTab:CreateSlider({
    Name = "Hit Chance",
    Range = {0, 100},
    Increment = 1,
    Suffix = "%",
    CurrentValue = SilentAim.HitChance,
    Callback = function(Value)
        SilentAim.HitChance = Value
        SaveConfig()
    end,
})

local function GetClosestTarget()
    local closest = nil
    local shortestDistance = SilentAim.Range
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local part = player.Character:FindFirstChild(SilentAim.TargetPart)
            if humanoid and humanoid.Health > 0 and part then
                local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                if onScreen then
                    local mousePos = UserInputService:GetMouseLocation()
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    if dist < shortestDistance then
                        shortestDistance = dist
                        closest = part
                    end
                end
            end
        end
    end
    return closest
end

local function GetDirection(origin, targetPos)
    return (targetPos - origin).Unit * 1000
end

local oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local args = {...}
    local self = args[1]
    local method = getnamecallmethod()
    if not checkcaller() and method == "Raycast" and self == workspace and SilentAim.Enabled then
        local origin = args[2]
        local dir = args[3]
        local chance = math.random(1, 100)
        if chance <= SilentAim.HitChance then
            local target = GetClosestTarget()
            if target then
                args[3] = GetDirection(origin, target.Position)
                return oldNamecall(unpack(args))
            end
        end
    end
    return oldNamecall(...)
end))
